#pragma checksum "C:\Perseverance Calculator Official\Perseverance Calculator 1\Pages\Graph.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "A610483D0ED9F9803902BC62BF6B7276AF3822D61A4E55D2BBF90D1D364476E3"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Perseverance_Calculator_1.Pages
{
    partial class Graph : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_FrameworkElement_Tag(global::Microsoft.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Tag = value;
            }
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBox_Text(global::Microsoft.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ContentControl_Content(global::Microsoft.UI.Xaml.Controls.ContentControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Int32 value)
            {
                obj.SelectedIndex = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class Graph_obj6_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IGraph_Bindings
        {
            private global::Perseverance_Calculator_1.Model.GraphFormulaList dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj6;
            private global::Microsoft.UI.Xaml.Controls.StackPanel obj7;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj8;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj9;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj10;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj11;
            private global::Microsoft.UI.Xaml.Controls.Button obj12;
            private global::Microsoft.UI.Xaml.Controls.Button obj13;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj7VisibilityDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9SelectedIndexDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj10TagDisabled = false;
            private static bool isobj11TextDisabled = false;
            private static bool isobj12ContentDisabled = false;
            private static bool isobj12TagDisabled = false;
            private static bool isobj13TagDisabled = false;

            private Graph_obj6_BindingsTracking bindingsTracking;

            public Graph_obj6_Bindings()
            {
                this.bindingsTracking = new Graph_obj6_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 143 && columnNumber == 72)
                {
                    isobj7VisibilityDisabled = true;
                }
                else if (lineNumber == 144 && columnNumber == 50)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 145 && columnNumber == 51)
                {
                    isobj9SelectedIndexDisabled = true;
                }
                else if (lineNumber == 156 && columnNumber == 94)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 156 && columnNumber == 166)
                {
                    isobj10TagDisabled = true;
                }
                else if (lineNumber == 157 && columnNumber == 67)
                {
                    isobj11TextDisabled = true;
                }
                else if (lineNumber == 135 && columnNumber == 104)
                {
                    isobj12ContentDisabled = true;
                }
                else if (lineNumber == 135 && columnNumber == 211)
                {
                    isobj12TagDisabled = true;
                }
                else if (lineNumber == 136 && columnNumber == 180)
                {
                    isobj13TagDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6: // Pages\Graph.xaml line 129
                        this.obj6 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target));
                        break;
                    case 7: // Pages\Graph.xaml line 143
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                        break;
                    case 8: // Pages\Graph.xaml line 144
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // Pages\Graph.xaml line 145
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_9(this.obj9);
                        break;
                    case 10: // Pages\Graph.xaml line 156
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_10(this.obj10);
                        break;
                    case 11: // Pages\Graph.xaml line 157
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 12: // Pages\Graph.xaml line 135
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    case 13: // Pages\Graph.xaml line 136
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj6.Target as global::Microsoft.UI.Xaml.Controls.StackPanel);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::Perseverance_Calculator_1.Model.GraphFormulaList>(item), 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IGraph_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::Perseverance_Calculator_1.Model.GraphFormulaList>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Perseverance_Calculator_1.Model.GraphFormulaList obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_visibility(obj.visibility, phase);
                        this.Update_formulaName(obj.formulaName, phase);
                        this.Update_comboBox_Color(obj.comboBox_Color, phase);
                        this.Update_XYValue(obj.XYValue, phase);
                        this.Update_XYValue_Output(obj.XYValue_Output, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 156
                    if (!isobj10TagDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag(this.obj10, obj, null);
                    }
                    // Pages\Graph.xaml line 135
                    if (!isobj12TagDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag(this.obj12, obj, null);
                    }
                    // Pages\Graph.xaml line 136
                    if (!isobj13TagDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag(this.obj13, obj, null);
                    }
                }
            }
            private void Update_visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 143
                    if (!isobj7VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj7, obj);
                    }
                }
            }
            private void Update_formulaName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 144
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj8, obj, null);
                    }
                    // Pages\Graph.xaml line 135
                    if (!isobj12ContentDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentControl_Content(this.obj12, obj, null);
                    }
                }
            }
            private void Update_comboBox_Color(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 145
                    if (!isobj9SelectedIndexDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedIndex(this.obj9, obj);
                    }
                }
            }
            private void Update_XYValue(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 156
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj10, obj, null);
                    }
                }
            }
            private void Update_XYValue_Output(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 157
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_8_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.formulaName = this.obj8.Text;
                    }
                }
            }
            private void UpdateTwoWay_9_SelectedIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.comboBox_Color = this.obj9.SelectedIndex;
                    }
                }
            }
            private void UpdateTwoWay_10_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.XYValue = this.obj10.Text;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class Graph_obj6_BindingsTracking
            {
                private global::System.WeakReference<Graph_obj6_Bindings> weakRefToBindingObj; 

                public Graph_obj6_BindingsTracking(Graph_obj6_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<Graph_obj6_Bindings>(obj);
                }

                public Graph_obj6_Bindings TryGetBindingObject()
                {
                    Graph_obj6_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Graph_obj6_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Perseverance_Calculator_1.Model.GraphFormulaList obj = sender as global::Perseverance_Calculator_1.Model.GraphFormulaList;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_visibility(obj.visibility, DATA_CHANGED);
                                bindings.Update_formulaName(obj.formulaName, DATA_CHANGED);
                                bindings.Update_comboBox_Color(obj.comboBox_Color, DATA_CHANGED);
                                bindings.Update_XYValue(obj.XYValue, DATA_CHANGED);
                                bindings.Update_XYValue_Output(obj.XYValue_Output, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "visibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_visibility(obj.visibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "formulaName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_formulaName(obj.formulaName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "comboBox_Color":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_comboBox_Color(obj.comboBox_Color, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "XYValue":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_XYValue(obj.XYValue, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "XYValue_Output":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_XYValue_Output(obj.XYValue_Output, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Perseverance_Calculator_1.Model.GraphFormulaList obj)
                {
                    Graph_obj6_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void RegisterTwoWayListener_8(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_9(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_9_SelectedIndex();
                        }
                    });
                }
                public void RegisterTwoWayListener_10(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_10_Text();
                        }
                    });
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class Graph_obj17_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IGraph_Bindings
        {
            private global::Perseverance_Calculator_1.Model.GraphFormulaList_Properties dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj17;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj18;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj19;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj22;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj23;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj24;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj25;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj26;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj27;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj28;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj29;
            private global::Microsoft.UI.Xaml.Controls.TextBox obj30;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj18TextDisabled = false;
            private static bool isobj19TextDisabled = false;
            private static bool isobj22TextDisabled = false;
            private static bool isobj23TextDisabled = false;
            private static bool isobj24TextDisabled = false;
            private static bool isobj25TextDisabled = false;
            private static bool isobj26TextDisabled = false;
            private static bool isobj27TextDisabled = false;
            private static bool isobj28TextDisabled = false;
            private static bool isobj29TextDisabled = false;
            private static bool isobj30TextDisabled = false;

            private Graph_obj17_BindingsTracking bindingsTracking;

            public Graph_obj17_Bindings()
            {
                this.bindingsTracking = new Graph_obj17_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 93 && columnNumber == 46)
                {
                    isobj18TextDisabled = true;
                }
                else if (lineNumber == 94 && columnNumber == 46)
                {
                    isobj19TextDisabled = true;
                }
                else if (lineNumber == 81 && columnNumber == 46)
                {
                    isobj22TextDisabled = true;
                }
                else if (lineNumber == 82 && columnNumber == 46)
                {
                    isobj23TextDisabled = true;
                }
                else if (lineNumber == 83 && columnNumber == 46)
                {
                    isobj24TextDisabled = true;
                }
                else if (lineNumber == 84 && columnNumber == 46)
                {
                    isobj25TextDisabled = true;
                }
                else if (lineNumber == 85 && columnNumber == 46)
                {
                    isobj26TextDisabled = true;
                }
                else if (lineNumber == 86 && columnNumber == 46)
                {
                    isobj27TextDisabled = true;
                }
                else if (lineNumber == 87 && columnNumber == 46)
                {
                    isobj28TextDisabled = true;
                }
                else if (lineNumber == 88 && columnNumber == 46)
                {
                    isobj29TextDisabled = true;
                }
                else if (lineNumber == 89 && columnNumber == 46)
                {
                    isobj30TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 17: // Pages\Graph.xaml line 77
                        this.obj17 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target));
                        break;
                    case 18: // Pages\Graph.xaml line 93
                        this.obj18 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_18(this.obj18);
                        break;
                    case 19: // Pages\Graph.xaml line 94
                        this.obj19 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_19(this.obj19);
                        break;
                    case 22: // Pages\Graph.xaml line 81
                        this.obj22 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_22(this.obj22);
                        break;
                    case 23: // Pages\Graph.xaml line 82
                        this.obj23 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_23(this.obj23);
                        break;
                    case 24: // Pages\Graph.xaml line 83
                        this.obj24 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_24(this.obj24);
                        break;
                    case 25: // Pages\Graph.xaml line 84
                        this.obj25 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_25(this.obj25);
                        break;
                    case 26: // Pages\Graph.xaml line 85
                        this.obj26 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_26(this.obj26);
                        break;
                    case 27: // Pages\Graph.xaml line 86
                        this.obj27 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_27(this.obj27);
                        break;
                    case 28: // Pages\Graph.xaml line 87
                        this.obj28 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_28(this.obj28);
                        break;
                    case 29: // Pages\Graph.xaml line 88
                        this.obj29 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_29(this.obj29);
                        break;
                    case 30: // Pages\Graph.xaml line 89
                        this.obj30 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_30(this.obj30);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj17.Target as global::Microsoft.UI.Xaml.Controls.StackPanel);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::Perseverance_Calculator_1.Model.GraphFormulaList_Properties>(item), 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IGraph_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::Perseverance_Calculator_1.Model.GraphFormulaList_Properties>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Perseverance_Calculator_1.Model.GraphFormulaList_Properties obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_graphTime(obj.graphTime, phase);
                        this.Update_graphTimeOnPlay(obj.graphTimeOnPlay, phase);
                        this.Update_axisSpacing(obj.axisSpacing, phase);
                        this.Update_graphStepX(obj.graphStepX, phase);
                        this.Update_graphStepY(obj.graphStepY, phase);
                        this.Update_graphScale(obj.graphScale, phase);
                        this.Update_graphResolution(obj.graphResolution, phase);
                        this.Update_graphPointX(obj.graphPointX, phase);
                        this.Update_graphPointY(obj.graphPointY, phase);
                        this.Update_graphLocationX(obj.graphLocationX, phase);
                        this.Update_graphLocationY(obj.graphLocationY, phase);
                    }
                }
            }
            private void Update_graphTime(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 93
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj18, obj, null);
                    }
                }
            }
            private void Update_graphTimeOnPlay(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 94
                    if (!isobj19TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj19, obj, null);
                    }
                }
            }
            private void Update_axisSpacing(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 81
                    if (!isobj22TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj22, obj, null);
                    }
                }
            }
            private void Update_graphStepX(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 82
                    if (!isobj23TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj23, obj, null);
                    }
                }
            }
            private void Update_graphStepY(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 83
                    if (!isobj24TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj24, obj, null);
                    }
                }
            }
            private void Update_graphScale(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 84
                    if (!isobj25TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj25, obj, null);
                    }
                }
            }
            private void Update_graphResolution(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 85
                    if (!isobj26TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj26, obj, null);
                    }
                }
            }
            private void Update_graphPointX(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 86
                    if (!isobj27TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj27, obj, null);
                    }
                }
            }
            private void Update_graphPointY(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 87
                    if (!isobj28TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj28, obj, null);
                    }
                }
            }
            private void Update_graphLocationX(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 88
                    if (!isobj29TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj29, obj, null);
                    }
                }
            }
            private void Update_graphLocationY(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\Graph.xaml line 89
                    if (!isobj30TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBox_Text(this.obj30, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_18_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.graphTime = this.obj18.Text;
                    }
                }
            }
            private void UpdateTwoWay_19_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.graphTimeOnPlay = this.obj19.Text;
                    }
                }
            }
            private void UpdateTwoWay_22_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.axisSpacing = this.obj22.Text;
                    }
                }
            }
            private void UpdateTwoWay_23_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.graphStepX = this.obj23.Text;
                    }
                }
            }
            private void UpdateTwoWay_24_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.graphStepY = this.obj24.Text;
                    }
                }
            }
            private void UpdateTwoWay_25_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.graphScale = this.obj25.Text;
                    }
                }
            }
            private void UpdateTwoWay_26_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.graphResolution = this.obj26.Text;
                    }
                }
            }
            private void UpdateTwoWay_27_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.graphPointX = this.obj27.Text;
                    }
                }
            }
            private void UpdateTwoWay_28_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.graphPointY = this.obj28.Text;
                    }
                }
            }
            private void UpdateTwoWay_29_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.graphLocationX = this.obj29.Text;
                    }
                }
            }
            private void UpdateTwoWay_30_Text()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.graphLocationY = this.obj30.Text;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class Graph_obj17_BindingsTracking
            {
                private global::System.WeakReference<Graph_obj17_Bindings> weakRefToBindingObj; 

                public Graph_obj17_BindingsTracking(Graph_obj17_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<Graph_obj17_Bindings>(obj);
                }

                public Graph_obj17_Bindings TryGetBindingObject()
                {
                    Graph_obj17_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Graph_obj17_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Perseverance_Calculator_1.Model.GraphFormulaList_Properties obj = sender as global::Perseverance_Calculator_1.Model.GraphFormulaList_Properties;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_graphTime(obj.graphTime, DATA_CHANGED);
                                bindings.Update_graphTimeOnPlay(obj.graphTimeOnPlay, DATA_CHANGED);
                                bindings.Update_axisSpacing(obj.axisSpacing, DATA_CHANGED);
                                bindings.Update_graphStepX(obj.graphStepX, DATA_CHANGED);
                                bindings.Update_graphStepY(obj.graphStepY, DATA_CHANGED);
                                bindings.Update_graphScale(obj.graphScale, DATA_CHANGED);
                                bindings.Update_graphResolution(obj.graphResolution, DATA_CHANGED);
                                bindings.Update_graphPointX(obj.graphPointX, DATA_CHANGED);
                                bindings.Update_graphPointY(obj.graphPointY, DATA_CHANGED);
                                bindings.Update_graphLocationX(obj.graphLocationX, DATA_CHANGED);
                                bindings.Update_graphLocationY(obj.graphLocationY, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "graphTime":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_graphTime(obj.graphTime, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "graphTimeOnPlay":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_graphTimeOnPlay(obj.graphTimeOnPlay, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "axisSpacing":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_axisSpacing(obj.axisSpacing, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "graphStepX":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_graphStepX(obj.graphStepX, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "graphStepY":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_graphStepY(obj.graphStepY, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "graphScale":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_graphScale(obj.graphScale, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "graphResolution":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_graphResolution(obj.graphResolution, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "graphPointX":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_graphPointX(obj.graphPointX, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "graphPointY":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_graphPointY(obj.graphPointY, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "graphLocationX":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_graphLocationX(obj.graphLocationX, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "graphLocationY":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_graphLocationY(obj.graphLocationY, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Perseverance_Calculator_1.Model.GraphFormulaList_Properties obj)
                {
                    Graph_obj17_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void RegisterTwoWayListener_18(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_18_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_19(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_19_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_22(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_22_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_23(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_23_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_24(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_24_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_25(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_25_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_26(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_26_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_27(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_27_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_28(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_28_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_29(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_29_Text();
                        }
                    });
                }
                public void RegisterTwoWayListener_30(global::Microsoft.UI.Xaml.Controls.TextBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_30_Text();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Pages\Graph.xaml line 56
                {
                    this.Win2D_Canvas = global::WinRT.CastExtensions.As<global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl>(target);
                    ((global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl)this.Win2D_Canvas).Draw += this.CanvasControl_Draw;
                    ((global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl)this.Win2D_Canvas).PointerPressed += this.Win2D_Canvas_PointerPressed;
                    ((global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl)this.Win2D_Canvas).PointerWheelChanged += this.Win2D_Canvas_PointerWheelChanged;
                    ((global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl)this.Win2D_Canvas).Unloaded += this.Win2D_Canvas_Unloaded;
                    ((global::Microsoft.Graphics.Canvas.UI.Xaml.CanvasControl)this.Win2D_Canvas).PointerMoved += this.Win2D_Canvas_PointerMoved;
                }
                break;
            case 3: // Pages\Graph.xaml line 117
                {
                    global::Microsoft.UI.Xaml.Controls.Button element3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element3).Click += this.Button_AddToGraphList_Click;
                }
                break;
            case 4: // Pages\Graph.xaml line 121
                {
                    this.GraphList_ItemsControl = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ItemsControl>(target);
                }
                break;
            case 12: // Pages\Graph.xaml line 135
                {
                    global::Microsoft.UI.Xaml.Controls.Button element12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element12).Click += this.Button_FormulaName_Click;
                }
                break;
            case 13: // Pages\Graph.xaml line 136
                {
                    global::Microsoft.UI.Xaml.Controls.Button element13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element13).Click += this.Button_FormulaNameDelete_Click;
                }
                break;
            case 14: // Pages\Graph.xaml line 69
                {
                    this.GraphProperties_ItemsControl = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ItemsControl>(target);
                }
                break;
            case 15: // Pages\Graph.xaml line 101
                {
                    this.TextBlock_GraphDirections = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 18: // Pages\Graph.xaml line 93
                {
                    global::Microsoft.UI.Xaml.Controls.TextBox element18 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)element18).TextChanged += this.TextBox_GraphTime_TextChanged;
                }
                break;
            case 19: // Pages\Graph.xaml line 94
                {
                    global::Microsoft.UI.Xaml.Controls.TextBox element19 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)element19).TextChanged += this.TextBox_GraphTimeOnPlay_TextChanged;
                }
                break;
            case 20: // Pages\Graph.xaml line 79
                {
                    global::Microsoft.UI.Xaml.Controls.Button element20 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element20).Click += this.Button_Play_Click;
                }
                break;
            case 21: // Pages\Graph.xaml line 80
                {
                    global::Microsoft.UI.Xaml.Controls.Button element21 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element21).Click += this.Button_Pause_Click;
                }
                break;
            case 22: // Pages\Graph.xaml line 81
                {
                    global::Microsoft.UI.Xaml.Controls.TextBox element22 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)element22).BeforeTextChanging += this.TextBox_AxisSpacing_BeforeTextChanging;
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)element22).TextChanged += this.TextBox_AxisSpacing_TextChanged;
                }
                break;
            case 23: // Pages\Graph.xaml line 82
                {
                    global::Microsoft.UI.Xaml.Controls.TextBox element23 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)element23).BeforeTextChanging += this.TextBox_GraphStepX_BeforeTextChanging;
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)element23).TextChanged += this.TextBox_GraphStepX_TextChanged;
                }
                break;
            case 24: // Pages\Graph.xaml line 83
                {
                    global::Microsoft.UI.Xaml.Controls.TextBox element24 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)element24).BeforeTextChanging += this.TextBox_GraphStepY_BeforeTextChanging;
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)element24).TextChanged += this.TextBox_GraphStepY_TextChanged;
                }
                break;
            case 25: // Pages\Graph.xaml line 84
                {
                    global::Microsoft.UI.Xaml.Controls.TextBox element25 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)element25).BeforeTextChanging += this.TextBox_GraphScale_BeforeTextChanging;
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)element25).TextChanged += this.TextBox_GraphScale_TextChanged;
                }
                break;
            case 27: // Pages\Graph.xaml line 86
                {
                    global::Microsoft.UI.Xaml.Controls.TextBox element27 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)element27).TextChanged += this.TextBox_PointX_TextChanged;
                }
                break;
            case 28: // Pages\Graph.xaml line 87
                {
                    global::Microsoft.UI.Xaml.Controls.TextBox element28 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.TextBox)element28).TextChanged += this.TextBox_PointY_TextChanged;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2406")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 6: // Pages\Graph.xaml line 129
                {                    
                    global::Microsoft.UI.Xaml.Controls.StackPanel element6 = (global::Microsoft.UI.Xaml.Controls.StackPanel)target;
                    Graph_obj6_Bindings bindings = new Graph_obj6_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element6.DataContext);
                    element6.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element6, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element6, bindings);
                }
                break;
            case 17: // Pages\Graph.xaml line 77
                {                    
                    global::Microsoft.UI.Xaml.Controls.StackPanel element17 = (global::Microsoft.UI.Xaml.Controls.StackPanel)target;
                    Graph_obj17_Bindings bindings = new Graph_obj17_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element17.DataContext);
                    element17.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element17, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element17, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

